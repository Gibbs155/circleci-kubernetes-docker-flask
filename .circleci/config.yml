
version: '2.1'
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
jobs:
  test-cluster:
    docker:
      - image: cimg/python:3.10
    parameters:
      cluster-name:
        description: |
          Name of the EKS cluster
        type: string
    steps:
      - kubernetes/install:
          kubectl-version: v1.22.0
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          command: |
            kubectl get services
          name: Test cluster
workflows:
  deployment:
    jobs:
      - aws-eks/create-cluster:
          cluster-name: my-eks-demo
      - test-cluster:
          cluster-name: my-eks-demo
          requires:
            - aws-eks/create-cluster
      - aws-eks/delete-cluster:
          cluster-name: my-eks-demo
          requires:
            - test-cluster




# version: 2.1
# orbs:
#   aws-eks: circleci/aws-eks@0.2.3
#   kubernetes: circleci/kubernetes@0.4.0
#   aws-ecr: circleci/aws-ecr@7.2.0

# jobs:
#   run-install-eksctl:
#     executor: aws-eks/python3
    
#     steps:
#       - checkout
#       - run:
#           name: Install the eksctl tool
#           command: |
#             if which eksctl > /dev/null; then
#               echo "eksctl is already installed"
#               exit 0
#             fi
#             mkdir -p eksctl_download
#             curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
#               | tar xz -C eksctl_download
#             chmod +x eksctl_download/eksctl
#             SUDO=""
#             if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
#               SUDO="sudo"
#             fi
#             $SUDO mv eksctl_download/eksctl /usr/local/bin/
#             rmdir eksctl_download
#             eksctl version

# workflows:
#   deployment:
#     jobs:
#       - aws-ecr/build-and-push-image:
#           account-url: AWS_ECR_URL # 773075230823.dkr.ecr.us-east-1.amazonaws.com
#           repo: circleci-kubernetes-docker-flask
#           dockerfile: Dockerfile
#           path: demo_app
#           tag: ${CIRCLE_SHA1}
      
#       - run-install-eksctl:
#           requires:
#             - aws-ecr/build-and-push-image

#       - aws-eks/create-cluster:
#           cluster-name: eks-app-deployment
#           aws-region: $AWS_REGION 
#           requires:
#             - run-install-eksctl